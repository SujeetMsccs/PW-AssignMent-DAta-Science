Q1. What is a database? Differentiate between SQL and NoSQL databases.


A database is an organized collection of data managed by computer software.

SQL databases store data in tables with a fixed schema and use SQL as their query language. 
     They are vertically scalable, ACID compliant, and suited for structured data.

NoSQL databases store data in collections or documents without a fixed schema and use a variety of query languages. 
     They are horizontally scalable, may or may not be ACID compliant, and suited for flexible, scalable, and fast applications.
     
Q2. What is DDL? Explain why CREATE, DROP, ALTER, and TRUNCATE are used with an example.



  A2. DDL stands for Data Definition Language. It is a subset of SQL (Structured Query Language) used to define and modify the structure of a database schema.

     Here is a brief explanation of the four most commonly used DDL statements:

       CREATE: This statement is used to create a new database, table, view, or other database object. 
           For example, the following statement creates a new table called "customers" with three columns: "id", "name", and "email".
           CREATE TABLE customers (
           id INT PRIMARY KEY,
           name VARCHAR(50),
           email VARCHAR(50)
            );
            
        DROP: This statement is used to delete a database, table, view, or other database object. 
             For example, the following statement drops the "customers" table    
             DROP TABLE customers;
             
             
        ALTER: This statement is used to modify the structure of an existing database object, such as a table or view. 
             For example, the following statement adds a new column called "phone" to the "customers" table:
              ALTER TABLE customers ADD COLUMN phone VARCHAR(20);
              
       
       
       TRUNCATE: This statement is used to remove all data from a table while keeping its structure intact. 
          It is a faster alternative to using the DELETE statement with no WHERE clause. 
          For example, the following statement removes all data from the "customers" table:
          
          TRUNCATE TABLE customers;
          
          
          
          In summary, CREATE is used to create a new database object, DROP is used to delete a database object, 
          ALTER is used to modify a database object, and TRUNCATE is used to remove all data from a table.
          
          
          
  Q3. What is DML? Explain INSERT, UPDATE, and DELETE with an example.
  
  
  
      DML stands for Data Manipulation Language. It is a subset of SQL (Structured Query Language) used to add, modify, and delete data within a database.

      Here are brief explanations of the three most commonly used DML statements:

       INSERT: This statement is used to add new data into a table. 
           For example, the following statement inserts a new record into a table called "customers":
           INSERT INTO customers (name, email) VALUES ('Sujeet Kumar', 'sujeetkumarnwd61@gmail.com');
           
       UPDATE: This statement is used to modify existing data in a table.
            For example, the following statement updates the email address of a customer with an ID of 1:
            UPDATE customers SET email = 'thedigitalsujeet@gmail.com' WHERE id = 1;
            
            
       DELETE: This statement is used to remove data from a table.
           For example, the following statement deletes a customer record with an ID of 1:
           
           DELETE FROM customers WHERE id = 1;
           
       In summary, INSERT is used to add new data into a table, UPDATE is used to modify existing data in a table, 
           and DELETE is used to remove data from a table.
           
           
           
     Q4. What is DQL? Explain SELECT with an example.
     
     
          DQL or Data Query Language is a part of SQL used to retrieve data from a database. The most common DQL statement is SELECT.

          For example, let's say you have a table named "customers" with columns like "name", "email", and "age". 
          To retrieve all columns of the customers whose age is greater than 30, you can use the following SELECT statement:
          
          SELECT * FROM customers WHERE age > 30;
          
          
         This statement will retrieve all columns from the "customers" table where the age is greater than 30.
          You can also retrieve specific columns from the table by replacing "*" with a comma-separated list of column names.
          
          
     Q5. Explain Primary Key and Foreign Key.
     
     
     
            A Primary Key is a unique identifier for a row in a table, while a Foreign Key is a field in one table that refers to the Primary Key of another table. 
            The Primary Key ensures each row in the table is unique, while the Foreign Key links tables together and ensures data consistency.
            
            
            
    Q6. Write a python code to connect MySQL to python. Explain the cursor() and execute() method.
    
    
    
         Here's an example Python code to connect to MySQL and execute a query:
             
             import mysql.connector

              # Establishing a connection to the MySQL server
              mydb = mysql.connector.connect(
              host="localhost",
              user="abc",
              password="password",
              database="test_1e"
              )

              
                mycursor = mydb.cursor()

                  mycursor.execute("SELECT * FROM customers")

                  results = mycursor.fetchall()
                   for row in results:
                  print(row)
             
             
             The cursor() method creates a cursor object that is used to execute queries on the database.
             The execute() method is used to execute a query on the database using the cursor object.

              In this example, we establish a connection to the MySQL server and create a cursor object using the cursor() method. 
              We then execute a SELECT query using the execute() method to retrieve all rows from the "customers" table. Finally, 
              we fetch the results using the fetchall() method of the cursor object.

              Note that after executing a query, we must fetch the results using one of the fetch methods of the cursor object, such as fetchall() or fetchone().
              
              
              
              In an SQL query, the order of execution of clauses is as follows:
              
              
      Q7. Give the order of execution of SQL clauses in an SQL query.        

          FROM: Specifies the table(s) to be used in the query.
          JOIN: Joins two or more tables together based on a specified condition.
          WHERE: Filters the rows returned by the query based on a specified condition.
          GROUP BY: Groups the rows returned by the query based on one or more columns.
          HAVING: Filters the grouped rows returned by the query based on a specified condition.
           SELECT: Selects the columns to be included in the query result set.
          DISTINCT: Filters out any duplicate rows from the query result set.
          ORDER BY: Sorts the rows returned by the query based on one or more columns.
          LIMIT: Limits the number of rows returned by the query.
             
